{"version":3,"file":"main.js","mappings":"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","sources":["webpack://mesto-project-ff/./src/components/api.js","webpack://mesto-project-ff/./src/components/card.js","webpack://mesto-project-ff/./src/components/modal.js","webpack://mesto-project-ff/./src/components/validation.js","webpack://mesto-project-ff/./src/components/index.js"],"sourcesContent":["export { getCurrentUserData, getInitialCards, changeProfileData, changeProfileImage, postNewCard, deleteCard, switchLike }\n\n//------------------- CONFIG -------------------\nconst config = {\n    baseUrl: 'https://nomoreparties.co/v1/wff-cohort-35',\n    headers: {\n        authorization: '7263799d-0cc7-4c40-bf32-62633bf1c840',\n        'Content-Type': 'application/json',\n    }\n}\n\nconst responseProcessing = res => \n    res.ok ? res.json() : Promise.reject(`Что-то пошло не так: ${res.status}`)\n\n\n//------------------- GET -------------------\n// Профиль\nconst getCurrentUserData = () => {\n    return fetch(`${config.baseUrl}/users/me`, {\n        headers: config.headers\n    })\n    .then(responseProcessing)\n}\n\n// Карточки\nconst getInitialCards = () => {\n    return fetch(`${config.baseUrl}/cards`, {\n        headers: config.headers\n    })\n    .then(responseProcessing)\n}\n\n\n//------------------- PATCH -------------------\n// Профиль\nconst changeProfileData = newProfileData => {\n    return fetch(`${config.baseUrl}/users/me`, {\n        method: 'PATCH',\n        headers: config.headers,\n        body: JSON.stringify(newProfileData),\n    })\n    .then(responseProcessing)\n}\n\n// Аватар\nconst changeProfileImage = newAvatar => {\n    return fetch(`${config.baseUrl}/users/me/avatar`, {\n        method: 'PATCH',\n        headers: config.headers,\n        body: JSON.stringify(newAvatar),\n    })\n    .then(responseProcessing)\n}\n\n\n//------------------- POST -------------------\n// Карточка\nconst postNewCard = newCardData => {\n    return fetch(`${config.baseUrl}/cards`, {\n        method: 'POST',\n        headers: config.headers,\n        body: JSON.stringify(newCardData)\n    })\n    .then(responseProcessing)\n}\n\n\n//------------------- DELETE -------------------\n// Карточка\nconst deleteCard = cardId => {\n    return fetch(`${config.baseUrl}/cards/${cardId}`, {\n        method: 'DELETE',\n        headers: config.headers,\n    })\n    .then(responseProcessing)\n}\n\n// Лайк Карточки\nconst switchLike = (cardId, likeBtn, likeCounter) => {\n    const isLiked = likeBtn.classList.contains('card__like-button_is-active')\n    const variableMethod = isLiked ? 'DELETE' : 'PUT'\n\n    return fetch(`${config.baseUrl}/cards/likes/${cardId}`, {\n        method: variableMethod,\n        headers: config.headers,\n    })\n    .then(responseProcessing)\n}\n\n\n","export { createCard }\n\n// Функция создания карточки\nfunction createCard(cardData, switchLike, openImgModal, openConfirmDeleteModal, currentUserId, cardAuthorId,) {\n    const cardTemplate = document.querySelector('#card-template').content\n    const card = cardTemplate.querySelector('.card').cloneNode(true)\n    const cardImage = card.querySelector('.card__image')\n    const cardTitle = card.querySelector('.card__title')\n\n    const cardDeleteButton = card.querySelector('.card__delete-button')\n    const cardLikeButton = card.querySelector('.card__like-button')\n\n    const cardLikesCounterElement = card.querySelector('.card__likes-counter')\n    const isLikedByCurrentUser = cardData.likes.some(card => card._id === currentUserId)\n\n    cardImage.src = cardData.link\n    cardImage.alt = `На картинке изображено: ${cardData.name}`\n    cardTitle.textContent = cardData.name\n    cardLikesCounterElement.textContent = cardData.likes.length\n    card.dataset.cardId = cardData._id\n\n\n//------------------- СЛУШАТЕЛИ -------------------\n    cardLikeButton.addEventListener('click', () => {\n        switchLike(cardData._id, cardLikeButton, cardLikesCounterElement)\n        .then(updatedCard => {\n            cardLikeButton.classList.toggle('card__like-button_is-active')\n            cardLikesCounterElement.textContent = updatedCard.likes.length\n\n            if (cardLikesCounterElement.textContent < 1) {\n                cardLikesCounterElement.style.display = 'none'\n            } else {\n                cardLikesCounterElement.style.display = 'block'\n            }\n        })\n        .catch(err => console.error(`Упс, лайнуть не удалось: ${err}`))\n    })\n\n    cardImage.addEventListener('click', () => {\n        openImgModal(cardData.name, cardData.link)\n    })\n\n    cardDeleteButton.addEventListener('click', () => {\n        openConfirmDeleteModal(cardData._id)\n    })\n\n\n//------------------- УСЛОВИЯ -------------------\n    if (currentUserId !== cardAuthorId) {\n        cardDeleteButton.style.display = 'none'\n    }\n\n    if (isLikedByCurrentUser) {\n        cardLikeButton.classList.add('card__like-button_is-active')\n    }\n\n    if (cardData.likes.length === 0) {\n        cardLikesCounterElement.style.display = 'none'\n    } else {\n        cardLikesCounterElement.style.display = 'block'\n    }\n\n\n    return card\n}\n","export { openModal, closeModal }\n\n// Функция открытия модального окна\nconst openModal = (modal) => {\n    modal.classList.add('popup_is-opened')\n    modal.addEventListener('click', closeModalByOverlayClick)\n    document.addEventListener('keydown', closeModalByKey)\n}\n\n// Функция закрытия модального окна\nconst closeModal = modal => {\n    modal.classList.remove('popup_is-opened')\n    modal.removeEventListener('click', closeModalByOverlayClick)\n    document.removeEventListener('keydown', closeModalByKey)\n}\n\n// Функция-обработчик события клика по оверлею\nfunction closeModalByOverlayClick(evt) {\n    if (evt.target === evt.currentTarget) {\n        closeModal(evt.currentTarget)\n    }\n}\n\n// Функция-обработчик события нажатия кнопки \"Esc\"\nfunction closeModalByKey(evt) {\n    if (evt.key === 'Escape') {\n        const modal = document.querySelector('.popup_is-opened')\n        modal ? closeModal(modal) : false\n    }\n}\n","export { enableValidation, clearValidation }\n\n// Валидация всех форм\nfunction enableValidation(config) {\n    const forms = document.querySelectorAll(config.formSelector)\n\n    forms.forEach(form => {\n        const inputs = form.querySelectorAll(config.inputSelector)\n        const submitButton = form.querySelector(config.submitButtonSelector)\n\n        inputs.forEach(input => {\n            input.addEventListener('input', () => {\n                isInputValid(form, input, config.inputErrorClass, config.errorClass)\n                toggleSubmitButton(inputs, submitButton, config.inactiveButtonClass)\n            })\n        })\n\n        toggleSubmitButton(inputs, submitButton, config.inactiveButtonClass)\n    })\n}\n\n// Проверка валидности полей формы\nfunction isInputValid(form, input, inputErrorClass, errorClass) {\n    const errorItem = form.querySelector(`.${input.id}-error`)\n    const customErrorMessage = input.dataset.errorMessage\n\n    if (input.validity.patternMismatch) {\n        input.setCustomValidity(customErrorMessage)\n    } else {\n        input.setCustomValidity('')\n    }\n\n    if (!input.validity.valid) {\n        input.classList.add(inputErrorClass)\n        errorItem.classList.add(errorClass)\n        errorItem.textContent = input.validationMessage\n    } else {\n        input.classList.remove(inputErrorClass)\n        errorItem.classList.remove(errorClass)\n        errorItem.textContent = ''\n    }\n}\n\n// Переключение состояния кнопки при валидации\nfunction toggleSubmitButton(inputs, submitButton, inactiveButtonClass) {\n    const hasInvalidInput = Array.from(inputs).some(input => !input.validity.valid)\n\n    if (hasInvalidInput) {\n        submitButton.classList.add(inactiveButtonClass)\n        submitButton.disabled = true\n    } else {\n        submitButton.classList.remove(inactiveButtonClass)\n        submitButton.disabled = false\n    }\n}\n\n// Очистка сообщений об ошибках\nfunction clearValidation(form, config) {\n    const inputs = form.querySelectorAll(config.inputSelector)\n    const submitButton = form.querySelector(config.submitButtonSelector)\n\n    inputs.forEach(input => {\n        const errorItem = form.querySelector(`.${input.id}-error`)\n\n        input.setCustomValidity('')\n        input.classList.remove(config.inputErrorClass)\n\n        if (errorItem) {\n            errorItem.textContent = ''\n            errorItem.classList.remove(config.errorClass)\n        }\n    })\n\n    submitButton.classList.add(config.inactiveButtonClass);\n    submitButton.disabled = true;\n}","import '../pages/index.css'\nimport { getCurrentUserData, getInitialCards, changeProfileData, changeProfileImage, postNewCard, deleteCard, switchLike } from './api.js'\nimport { createCard } from './card.js'\nimport { openModal, closeModal } from './modal.js'\nimport { enableValidation, clearValidation } from './validation.js'\n\n\n//-------------- ПРОФИЛЬ --------------\nconst profileName = document.querySelector('.profile__title')\nconst profileJob = document.querySelector('.profile__description')\nconst profileImage = document.querySelector('.profile__image')\n\n// Контейнер карточек\nconst cardContainer = document.querySelector('.places__list')\n\n\n//------------------- МОДАЛЬНЫЕ ОКНА --------------\n// Все модальные окна\nconst modals = document.querySelectorAll('.popup')\n\n// Профиль\nconst profileEditModal = document.querySelector('.popup_type_edit')\nconst addNewCardModal = document.querySelector('.popup_type_new-card')\n\n// Аватар\nconst profileEditAvatarModal = document.querySelector('.popup_type_new-avatar')\n\n// Карточка\nconst cardImagePopup = document.querySelector('.popup_type_image')\nconst popupImage = cardImagePopup.querySelector('.popup__image')\nconst popupCaption = cardImagePopup.querySelector('.popup__caption')\n\n// Удаление\nconst confirmDeleteModal = document.querySelector('.popup_type_delete-card')\n\n\n//------------------- КНОПКИ ------------------\n// Все кнопки закрытия модальных окон\nconst closeModalButtons = document.querySelectorAll('.popup__close')\n\n// Все кнопки модальных окон\nconst allPopupButtons = document.querySelectorAll('.popup__button')\n\n// Профиль\nconst profileEditBtn = document.querySelector('.profile__edit-button')\nconst profileAddBtn = document.querySelector('.profile__add-button')\n\n\n//------------------- ФОРМЫ -------------------\n// Профиль\nconst profileEditForm = document.forms['edit-profile']\nconst profileNameInput = profileEditForm.querySelector('.popup__input_type_name')\nconst profileJobInput = profileEditForm.querySelector('.popup__input_type_description')\n\n// Карточка\nconst addNewCardForm = document.forms['new-place']\nconst newCardNameInput = addNewCardForm.querySelector('.popup__input_type_card-name')\nconst newCardLinkInput = addNewCardForm.querySelector('.popup__input_type_url')\n\n// Аватар\nconst profileEditAvatarForm = document.forms['new-avatar']\nconst profileEditAvatarInput = profileEditAvatarForm.querySelector('.popup__input_type_url')\n\n// Удаление\nconst confirmDeleteForm = document.forms['confirm-delete']\n\n// Объект настроек валидации\nconst validationConfig = {\n    formSelector: '.popup__form',\n    inputSelector: '.popup__input',\n    submitButtonSelector: '.popup__button',\n    inactiveButtonClass: 'popup__button_disabled',\n    inputErrorClass: 'popup__input_type_error',\n    errorClass: 'popup__error_visible',\n}\n\n\n//------------------- ФУНКЦИИ -------------------\n// Лоадер\nfunction renderLoading(isLoading, button) {\n    if (isLoading) {\n        button.classList.add('popup__button_loading')\n        button.textContent = 'Сохранение'\n    } else {\n        button.classList.remove('popup__button_loading')\n        button.textContent = button.dataset.originalText\n    }\n}\n\n// Профиль\nfunction updateProfile() {\n    getCurrentUserData()\n    .then(profileData => {\n      profileName.textContent = profileData.name\n      profileJob.textContent = profileData.about\n      profileImage.style.backgroundImage = `url(${profileData.avatar})`\n    })\n    .catch(err => console.error(`Упс, ошибочка вышла: ${err}`))\n}\n\n// Отправка формы Профиля\nfunction handleProfileFormSubmit(evt) {\n    evt.preventDefault()\n    const saveButton = profileEditForm.querySelector('.popup__button')\n    const newProfileData = {\n        name: profileNameInput.value,\n        about: profileJobInput.value,\n    }\n    renderLoading(true, saveButton)\n\n    changeProfileData(newProfileData)\n    .then(newProfileData => {\n        profileName.textContent = newProfileData.name\n        profileJob.textContent = newProfileData.about\n        closeModal(profileEditModal)\n    })\n    .catch(err => console.error(`Упс, ошибочка обновления профиля: ${err}`))\n    .finally(() => renderLoading(false, saveButton))\n}\n\n// Отправка формы Аватара\nfunction handleAvatarFormSubmit(evt) {\n    evt.preventDefault()\n\n    const saveButton = profileEditAvatarForm.querySelector('.popup__button')\n    const newAvatar = {avatar: profileEditAvatarInput.value}\n    renderLoading(true, saveButton)\n\n    changeProfileImage(newAvatar)\n    .then((profileData) => {\n        profileImage.style.backgroundImage = `url(${profileData.avatar})`\n        closeModal(profileEditAvatarModal)\n    })\n    .catch(err => console.error(`Упс, ошибочка загрузки аватара: ${err}`))\n    .finally(() => renderLoading(false, saveButton))\n}\n\n// Отправка формы создания новой Карточки\nfunction handleNewCardFormSubmit(evt) {\n    evt.preventDefault()\n\n    const saveButton = addNewCardForm.querySelector('.popup__button')\n    const newCard = {\n        name: newCardNameInput.value,\n        link: newCardLinkInput.value,\n    }\n    renderLoading(true, saveButton)\n\n    postNewCard(newCard)\n    .then(newCardData => {\n        cardContainer.prepend(createCard(newCardData,\n                                        switchLike,\n                                        openImgModal,\n                                        openConfirmDeleteModal\n        ))\n        addNewCardForm.reset()\n        closeModal(addNewCardModal)\n    })\n    .catch(err => console.error(`Упс, ошибочка вышла: ${err}`))\n    .finally(() => renderLoading(false, saveButton))\n}\n\n// Открытие попапа картинки Карточки\nfunction openImgModal(name, link) {\n    openModal(cardImagePopup)\n    popupImage.alt = `На картинке изображено: ${name}`\n    popupCaption.textContent = name\n    popupImage.src = link\n}\n\n// Открытие попапа Удаления\nfunction openConfirmDeleteModal(cardId) {\n    confirmDeleteModal.dataset.cardId = cardId\n    openModal(confirmDeleteModal)\n\n    confirmDeleteForm.elements['delete-button'].focus()\n}\n\n\n//------------------- СЛУШАТЕЛИ -------------------\n// Все кнопки закрытия модальных окон\ncloseModalButtons.forEach((btn) => {\n    const modal = btn.closest('.popup')\n    btn.addEventListener('click', () => closeModal(modal))\n})\n\n// Профиль\nprofileEditBtn.addEventListener('click', () => {\n    profileNameInput.value = profileName.textContent\n    profileJobInput.value = profileJob.textContent\n    openModal(profileEditModal)\n    clearValidation(profileEditForm, validationConfig)\n\n    profileNameInput.focus()\n})\n\n// Карточка\nprofileAddBtn.addEventListener('click', () => {\n    newCardNameInput.value = ''\n    newCardLinkInput.value = ''\n    openModal(addNewCardModal)\n    clearValidation(addNewCardForm, validationConfig)\n\n    newCardNameInput.focus()\n})\n\n// Аватар\nprofileImage.addEventListener('click', () => {\n    profileEditAvatarInput.value = ''\n    openModal(profileEditAvatarModal)\n    clearValidation(profileEditAvatarForm, validationConfig)\n\n    profileEditAvatarInput.focus()\n})\n\n// \"Сохранить\" Профиль\nprofileEditForm.addEventListener('submit', handleProfileFormSubmit)\n\n// \"Сохранить\" Карточка\naddNewCardForm.addEventListener('submit', handleNewCardFormSubmit)\n\n// \"Сохранить\" Аватар\nprofileEditAvatarForm.addEventListener('submit', handleAvatarFormSubmit)\n\n// \"Да\" Удаление\nconfirmDeleteForm.addEventListener('submit', (evt) => {\n    evt.preventDefault()\n    const saveButton = confirmDeleteForm.querySelector('.popup__button')\n    const cardId = confirmDeleteModal.dataset.cardId\n    const cardElement = document.querySelector(`[data-card-id=\"${cardId}\"]`)\n    renderLoading(true, saveButton)\n\n    deleteCard(cardId)\n    .then(() => {\n        cardElement.remove()\n        closeModal(confirmDeleteModal)\n    })\n    .catch(err => console.error(\"Ошибка удаления:\", err))\n    .finally(() => renderLoading(false, saveButton))\n})\n\n// Записываю оригинальный текст кнопок\nallPopupButtons.forEach(btn => {\n    btn.dataset.originalText = btn.textContent\n})\n\n// Плавное открытие/закрытие всех модальных окон\nmodals.forEach((modal) => modal.classList.add('popup_is-animated'))\n\n//-----------------------------------------------\n// Вызовы функций\nupdateProfile()\nenableValidation(validationConfig)\n\nPromise.all([getInitialCards(), getCurrentUserData()])\n    .then(([cards, userData]) => {\n        cards.forEach(cardData => {\n            const currentUserId = userData._id\n            const cardAuthorId = cardData.owner._id\n            cardContainer.append(createCard(cardData,\n                                            switchLike,\n                                            openImgModal,\n                                            openConfirmDeleteModal,\n                                            currentUserId,\n                                            cardAuthorId\n            ))\n        })\n    })\n    .catch(err => console.error(`Упс, ошибочка вышла: ${err}`))"],"names":["config","baseUrl","headers","authorization","responseProcessing","res","ok","json","Promise","reject","concat","status","getCurrentUserData","fetch","then","switchLike","cardId","likeBtn","likeCounter","variableMethod","classList","contains","method","createCard","cardData","openImgModal","openConfirmDeleteModal","currentUserId","cardAuthorId","card","document","querySelector","content","cloneNode","cardImage","cardTitle","cardDeleteButton","cardLikeButton","cardLikesCounterElement","isLikedByCurrentUser","likes","some","_id","src","link","alt","name","textContent","length","dataset","addEventListener","updatedCard","toggle","style","display","catch","err","console","error","add","openModal","modal","closeModalByOverlayClick","closeModalByKey","closeModal","remove","removeEventListener","evt","target","currentTarget","key","toggleSubmitButton","inputs","submitButton","inactiveButtonClass","Array","from","input","validity","valid","disabled","clearValidation","form","querySelectorAll","inputSelector","submitButtonSelector","forEach","errorItem","id","setCustomValidity","inputErrorClass","errorClass","profileName","profileJob","profileImage","cardContainer","modals","profileEditModal","addNewCardModal","profileEditAvatarModal","cardImagePopup","popupImage","popupCaption","confirmDeleteModal","closeModalButtons","allPopupButtons","profileEditBtn","profileAddBtn","profileEditForm","forms","profileNameInput","profileJobInput","addNewCardForm","newCardNameInput","newCardLinkInput","profileEditAvatarForm","profileEditAvatarInput","confirmDeleteForm","validationConfig","formSelector","renderLoading","isLoading","button","originalText","elements","focus","btn","closest","value","preventDefault","saveButton","newProfileData","about","body","JSON","stringify","changeProfileData","finally","newCardData","newCard","prepend","reset","newAvatar","avatar","changeProfileImage","profileData","backgroundImage","cardElement","deleteCard","customErrorMessage","errorMessage","patternMismatch","validationMessage","isInputValid","enableValidation","all","_ref","_ref2","cards","userData","owner","append"],"sourceRoot":""}