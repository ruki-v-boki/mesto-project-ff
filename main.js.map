{"version":3,"file":"main.js","mappings":"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","sources":["webpack://mesto-project-ff/./src/components/api.js","webpack://mesto-project-ff/./src/components/card.js","webpack://mesto-project-ff/./src/components/modal.js","webpack://mesto-project-ff/./src/components/validation.js","webpack://mesto-project-ff/./src/components/index.js"],"sourcesContent":["export { getCurrentUserData, getInitialCards, changeProfileData, changeProfileImage, postNewCard, deleteCard, switchLike, checkLinkOnImageType }\n\n//------------------- CONFIG -------------------\nconst config = {\n    baseUrl: 'https://nomoreparties.co/v1/wff-cohort-35',\n    headers: {\n        authorization: '7263799d-0cc7-4c40-bf32-62633bf1c840',\n        'Content-Type': 'application/json',\n    }\n}\n\nconst responseProcessing = res => \n    res.ok ? res.json() : Promise.reject(`Что-то пошло не так: ${res.status}`)\n\n\n//------------------- GET -------------------\n// Профиль\nconst getCurrentUserData = () => {\n    return fetch(`${config.baseUrl}/users/me`, {\n        headers: config.headers\n    })\n    .then(responseProcessing)\n}\n\n// Карточки\nconst getInitialCards = () => {\n    return fetch(`${config.baseUrl}/cards`, {\n        headers: config.headers\n    })\n    .then(responseProcessing)\n}\n\n\n//------------------- PATCH -------------------\n// Профиль\nconst changeProfileData = newProfileData => {\n    return fetch(`${config.baseUrl}/users/me`, {\n        method: 'PATCH',\n        headers: config.headers,\n        body: JSON.stringify(newProfileData),\n    })\n    .then(responseProcessing)\n}\n\n// Аватар\nconst changeProfileImage = newAvatar => {\n    return fetch(`${config.baseUrl}/users/me/avatar`, {\n        method: 'PATCH',\n        headers: config.headers,\n        body: JSON.stringify(newAvatar),\n    })\n    .then(responseProcessing)\n}\n\n\n//------------------- POST -------------------\n// Карточка\nconst postNewCard = newCardData => {\n    return fetch(`${config.baseUrl}/cards`, {\n        method: 'POST',\n        headers: config.headers,\n        body: JSON.stringify(newCardData)\n    })\n    .then(responseProcessing)\n}\n\n\n//------------------- DELETE -------------------\n// Карточка\nconst deleteCard = cardId => {\n    return fetch(`${config.baseUrl}/cards/${cardId}`, {\n        method: 'DELETE',\n        headers: config.headers,\n    })\n    .then(responseProcessing)\n}\n\n// Лайк Карточки\nconst switchLike = (cardId, likeStatus) => {\n    const variableMethod = likeStatus ? 'DELETE' : 'PUT'\n\n    return fetch(`${config.baseUrl}/cards/likes/${cardId}`, {\n        method: variableMethod,\n        headers: config.headers,\n    })\n    .then(responseProcessing)\n}\n\n\n//------------------- HEAD -------------------\n// Аватар\nconst checkLinkOnImageType = link => {\n    return fetch(link, {\n        method: 'HEAD',\n    })\n    .then(res => {\n        const linkType = res.headers.get('Content-Type')\n        if (res.ok && linkType && linkType.startsWith('image/')) {\n            return true\n        } else {\n            return false\n        }\n    })\n    .catch(err => console.error(`Ошибка проверки ссылки: ${err}`))\n}\n","export { createCard, deleteCardElement }\n\n// Функция создания карточки\nfunction createCard(cardData, switchLike, openImgModal, openConfirmDeleteModal, currentUserId) {\n    const cardTemplate = document.querySelector('#card-template').content\n    const card = cardTemplate.querySelector('.card').cloneNode(true)\n    const cardImage = card.querySelector('.card__image')\n    const cardTitle = card.querySelector('.card__title')\n\n    const cardDeleteButton = card.querySelector('.card__delete-button')\n    const cardLikeButton = card.querySelector('.card__like-button')\n\n    const cardLikesCounterElement = card.querySelector('.card__likes-counter')\n    const isLikedByCurrentUser = cardData.likes.some(card => card._id === currentUserId)\n\n    cardImage.src = cardData.link\n    cardImage.alt = cardData.name\n    cardTitle.textContent = cardData.name\n    cardLikesCounterElement.textContent = cardData.likes.length\n\n\n//------------------- СЛУШАТЕЛИ -------------------\n    cardLikeButton.addEventListener('click', () => {\n        const isCardLiked = cardLikeButton.classList.contains('card__like-button_is-active')\n\n        switchLike(cardData._id, isCardLiked)\n        .then(updatedCard => {\n            cardLikeButton.classList.toggle('card__like-button_is-active')\n            cardLikesCounterElement.textContent = updatedCard.likes.length\n\n            if (cardLikesCounterElement.textContent < 1) {\n                cardLikesCounterElement.classList.add('display-disabled')\n            } else {\n                cardLikesCounterElement.classList.remove('display-disabled')\n            }\n        })\n        .catch(err => console.error(`Упс, лайкнуть не удалось: ${err}`))\n    })\n\n    cardImage.addEventListener('click', () => {\n        openImgModal(cardData.name, cardData.link)\n    })\n\n    cardDeleteButton.addEventListener('click', () => {\n        openConfirmDeleteModal(cardData._id, card)\n    })\n\n\n//------------------- УСЛОВИЯ -------------------\n    if (currentUserId !== cardData.owner._id) {\n        cardDeleteButton.classList.add('display-disabled')\n    }\n\n    if (isLikedByCurrentUser) {\n        cardLikeButton.classList.add('card__like-button_is-active')\n    }\n\n    if (cardData.likes.length === 0) {\n        cardLikesCounterElement.classList.add('display-disabled')\n\n    } else {\n        cardLikesCounterElement.classList.remove('display-disabled')\n    }\n\n\n    return card\n}\n\n// Функция удаления карточки\nfunction deleteCardElement(cardElement) {\n    cardElement.remove()\n}","export { openModal, closeModal }\n\n// Функция открытия модального окна\nconst openModal = modal => {\n    modal.classList.add('popup_is-opened')\n    modal.addEventListener('mousedown', closeModalByOverlayClick)\n    document.addEventListener('keydown', closeModalByKey)\n}\n\n// Функция закрытия модального окна\nconst closeModal = modal => {\n    modal.classList.remove('popup_is-opened')\n    modal.removeEventListener('mousedown', closeModalByOverlayClick)\n    document.removeEventListener('keydown', closeModalByKey)\n}\n\n// Функция-обработчик события клика по оверлею\nconst closeModalByOverlayClick = evt => {\n    if (evt.target === evt.currentTarget) {\n        closeModal(evt.currentTarget)\n    }\n}\n\n// Функция-обработчик события нажатия кнопки \"Esc\"\nconst closeModalByKey = evt => {\n    if (evt.key === 'Escape') {\n        const modal = document.querySelector('.popup_is-opened')\n        modal ? closeModal(modal) : false\n    }\n}","export { enableValidation, clearValidation }\n\n// Валидация всех форм\nfunction enableValidation(config) {\n    const forms = document.querySelectorAll(config.formSelector)\n\n    forms.forEach(form => {\n        const inputs = form.querySelectorAll(config.inputSelector)\n        const submitButton = form.querySelector(config.submitButtonSelector)\n\n        inputs.forEach(input => {\n            input.addEventListener('input', () => {\n                isInputValid(form, input, config.inputErrorClass, config.errorClass)\n                toggleSubmitButton(inputs, submitButton, config.inactiveButtonClass)\n            })\n        })\n\n        toggleSubmitButton(inputs, submitButton, config.inactiveButtonClass)\n    })\n}\n\n// Проверка валидности полей формы\nfunction isInputValid(form, input, inputErrorClass, errorClass) {\n    const errorItem = form.querySelector(`.${input.id}-error`)\n    const customErrorMessage = input.dataset.errorMessage\n\n    if (input.validity.patternMismatch) {\n        input.setCustomValidity(customErrorMessage)\n    } else {\n        input.setCustomValidity('')\n    }\n\n    if (!input.validity.valid) {\n        showError(input, errorItem, inputErrorClass, errorClass)\n    } else {\n        deleteError(input, errorItem, inputErrorClass, errorClass)\n    }\n}\n\n// Переключение состояния кнопки при валидации\nfunction toggleSubmitButton(inputs, submitButton, inactiveButtonClass) {\n    const hasInvalidInput = Array.from(inputs).some(input => !input.validity.valid)\n\n    if (hasInvalidInput) {\n        submitButton.classList.add(inactiveButtonClass)\n        submitButton.disabled = true\n    } else {\n        submitButton.classList.remove(inactiveButtonClass)\n        submitButton.disabled = false\n    }\n}\n\n// Очистка сообщений об ошибках\nfunction clearValidation(form, config) {\n    const inputs = form.querySelectorAll(config.inputSelector)\n    const submitButton = form.querySelector(config.submitButtonSelector)\n\n    inputs.forEach(input => {\n        const errorItem = form.querySelector(`.${input.id}-error`)\n\n        input.setCustomValidity('')\n        deleteError(input, errorItem, config.inputErrorClass, config.errorClass)\n    })\n    toggleSubmitButton(inputs, submitButton, config.inactiveButtonClass)\n}\n\n// Показать ошибку\nfunction showError(input, errorItem, inputErrorClass, errorClass) {\n    input.classList.add(inputErrorClass)\n    errorItem.classList.add(errorClass)\n    errorItem.textContent = input.validationMessage\n}\n\n// Удалить сообщение об ошибке\nfunction deleteError(input, errorItem, inputErrorClass, errorClass) {\n    input.classList.remove(inputErrorClass)\n    errorItem.classList.remove(errorClass)\n    errorItem.textContent = ''\n}\n","import '../pages/index.css'\nimport { getCurrentUserData, getInitialCards, changeProfileData, changeProfileImage, postNewCard, deleteCard, switchLike, checkLinkOnImageType } from './api.js'\nimport { createCard, deleteCardElement } from './card.js'\nimport { openModal, closeModal } from './modal.js'\nimport { enableValidation, clearValidation } from './validation.js'\n\n\n//------------------- ЛОАДЕР -------------------\nconst loaders = document.querySelectorAll('.loader')\n\n\n//------------------- ПРОФИЛЬ -------------------\nconst profileName = document.querySelector('.profile__title')\nconst profileJob = document.querySelector('.profile__description')\nconst profileImage = document.querySelector('.profile__image')\n\n// Контейнер карточек\nconst cardContainer = document.querySelector('.places__list')\n\n\n//------------------- МОДАЛЬНЫЕ ОКНА -------------------\n// Все модальные окна\nconst modals = document.querySelectorAll('.popup')\n\n// Профиль\nconst profileEditModal = document.querySelector('.popup_type_edit')\nconst addNewCardModal = document.querySelector('.popup_type_new-card')\n\n// Аватар\nconst profileEditAvatarModal = document.querySelector('.popup_type_new-avatar')\n\n// Карточка\nconst cardImagePopup = document.querySelector('.popup_type_image')\nconst popupImage = cardImagePopup.querySelector('.popup__image')\nconst popupCaption = cardImagePopup.querySelector('.popup__caption')\n\n// Удаление\nconst confirmDeleteModal = document.querySelector('.popup_type_delete-card')\n\n\n//------------------- КНОПКИ ------------------\n// Все кнопки закрытия модальных окон\nconst closeModalButtons = document.querySelectorAll('.popup__close')\n\n// Все кнопки модальных окон\nconst allPopupButtons = document.querySelectorAll('.popup__button')\n\n// Профиль\nconst profileEditBtn = document.querySelector('.profile__edit-button')\nconst profileAddBtn = document.querySelector('.profile__add-button')\n\n\n//------------------- ФОРМЫ -------------------\n// Профиль\nconst profileEditForm = document.forms['edit-profile']\nconst profileNameInput = profileEditForm.querySelector('.popup__input_type_name')\nconst profileJobInput = profileEditForm.querySelector('.popup__input_type_description')\n\n// Карточка\nconst addNewCardForm = document.forms['new-place']\nconst newCardNameInput = addNewCardForm.querySelector('.popup__input_type_card-name')\nconst newCardLinkInput = addNewCardForm.querySelector('.popup__input_type_url')\n\n// Аватар\nconst profileEditAvatarForm = document.forms['new-avatar']\nconst profileEditAvatarInput = profileEditAvatarForm.querySelector('.popup__input_type_url')\n\n// Удаление\nconst confirmDeleteForm = document.forms['confirm-delete']\n\n// Объект настроек валидации\nconst validationConfig = {\n    formSelector: '.popup__form',\n    inputSelector: '.popup__input',\n    submitButtonSelector: '.popup__button',\n    inactiveButtonClass: 'popup__button_disabled',\n    inputErrorClass: 'popup__input_type_error',\n    errorClass: 'popup__error_visible',\n}\n\n// Карточка для удаления\nconst cardForDelete = {\n    cardId: '',\n    cardElement: null,\n}\n\n\n//------------------- ФУНКЦИИ -------------------\n// Лоадер страницы\nfunction spinLoader(isLoading, loaderElements, domElement) {\n    loaderElements.forEach(loader => loader.classList.toggle('display-disabled', !isLoading))\n    domElement.classList.toggle('display-disabled', isLoading)\n}\n\n// Лоадер кнопки\nfunction renderLoading(isLoading, button, loadingText) {\n    if (isLoading) {\n        button.classList.add('popup__button_loading')\n        button.textContent = loadingText\n    } else {\n        button.classList.remove('popup__button_loading')\n        button.textContent = button.dataset.originalText\n    }\n}\n\n// Инициализация Страницы\nfunction initalizePage(getInitialCards, getCurrentUserData) {\n    spinLoader(true, loaders, profileImage)\n    spinLoader(true, loaders, cardContainer)\n    Promise.all([getInitialCards(), getCurrentUserData()])\n        .then(([cards, userData]) => {\n            cards.forEach(cardData => {\n                cardContainer.append(createCard(cardData,\n                                                switchLike,\n                                                openImgModal,\n                                                openConfirmDeleteModal,\n                                                userData._id\n                ))\n            })\n            updateProfile(userData)\n        })\n        .catch(err => console.error(`Упс, ошибочка вышла: ${err}`))\n        .finally(() => {\n            spinLoader(false, loaders, profileImage)\n            spinLoader(false, loaders, cardContainer)\n        })\n}\n\n// Профиль\nfunction updateProfile(profileData) {\n    profileName.textContent = profileData.name\n    profileJob.textContent = profileData.about\n    profileImage.style.backgroundImage = `url(${profileData.avatar})`\n}\n\n// Отправка формы Профиля\nfunction handleProfileFormSubmit(evt) {\n    evt.preventDefault()\n    const newProfileData = {\n        name: profileNameInput.value,\n        about: profileJobInput.value,\n    }\n    renderLoading(true, evt.submitter, 'Сохранение')\n\n    changeProfileData(newProfileData)\n    .then(newProfileData => {\n        profileName.textContent = newProfileData.name\n        profileJob.textContent = newProfileData.about\n        closeModal(profileEditModal)\n    })\n    .catch(err => console.error(`Упс, ошибочка обновления профиля: ${err}`))\n    .finally(() => renderLoading(false, evt.submitter))\n}\n\n// Отправка формы Аватара\nfunction handleAvatarFormSubmit(evt) {\n    evt.preventDefault()\n    const newAvatar = {avatar: profileEditAvatarInput.value}\n    renderLoading(true, evt.submitter, 'Сохранение')\n\n    checkLinkOnImageType(profileEditAvatarInput.value)\n    .then(res => {\n        if (res) {\n            changeProfileImage(newAvatar)\n            .then(profileData => {\n                profileImage.style.backgroundImage = `url(${profileData.avatar})`\n                closeModal(profileEditAvatarModal)\n                const errorItem = profileEditAvatarForm.querySelector(`.${profileEditAvatarInput.id}-error`)\n                profileEditAvatarInput.classList.remove(validationConfig.inputErrorClass)\n                errorItem.classList.remove(validationConfig.errorClass)\n            })\n        } else {\n            throw new Error('Ссылка не ведет на изображение')\n        }\n    })\n    .catch(err => {\n        console.error(`Ошибка проверки ссылки аватара: ${err}`)\n        const errorItem = profileEditAvatarForm.querySelector(`.${profileEditAvatarInput.id}-error`)\n        profileEditAvatarInput.classList.add(validationConfig.inputErrorClass)\n        errorItem.classList.add(validationConfig.errorClass)\n        errorItem.textContent = 'Увы, эта ссылка не подойдет, попробуйте другую'\n    })\n    .finally(() => renderLoading(false, evt.submitter))\n}\n\n// Отправка формы создания новой Карточки\nfunction handleNewCardFormSubmit(evt) {\n    evt.preventDefault()\n    const newCard = {\n        name: newCardNameInput.value,\n        link: newCardLinkInput.value,\n    }\n    renderLoading(true, evt.submitter, 'Сохранение')\n\n    postNewCard(newCard)\n    .then(newCardData => {\n        cardContainer.prepend(createCard(newCardData,\n                                        switchLike,\n                                        openImgModal,\n                                        openConfirmDeleteModal,\n                                        newCardData.owner._id\n        ))\n        addNewCardForm.reset()\n        closeModal(addNewCardModal)\n    })\n    .catch(err => console.error(`Упс, ошибочка вышла: ${err}`))\n    .finally(() => renderLoading(false, evt.submitter))\n}\n\n// Отправка формы подтверждения Удаления\nfunction handleConfirmDeleteFormSubmit(evt) {\n    evt.preventDefault()\n    renderLoading(true, evt.submitter, 'Удаление')\n\n    deleteCard(cardForDelete.cardId)\n    .then(() => {\n        deleteCardElement(cardForDelete.cardElement)\n        closeModal(confirmDeleteModal)\n    })\n    .catch(err => console.error(\"Ошибка удаления:\", err))\n    .finally(() => renderLoading(false, evt.submitter))\n}\n\n// Открытие попапа картинки Карточки\nfunction openImgModal(name, link) {\n    openModal(cardImagePopup)\n    popupImage.alt = name\n    popupCaption.textContent = name\n    popupImage.src = link\n\n    cardImagePopup.querySelector('.popup__close').focus()\n}\n\n// Открытие попапа Удаления\nfunction openConfirmDeleteModal(cardId, cardElement) {\n    cardForDelete.cardId = cardId\n    cardForDelete.cardElement = cardElement\n\n    openModal(confirmDeleteModal)\n\n    confirmDeleteForm.elements['delete-button'].focus()\n}\n\n\n//------------------- СЛУШАТЕЛИ -------------------\n// Все кнопки закрытия модальных окон\ncloseModalButtons.forEach(btn => {\n    const modal = btn.closest('.popup')\n    btn.addEventListener('click', () => closeModal(modal))\n})\n\n// Профиль\nprofileEditBtn.addEventListener('click', () => {\n    profileNameInput.value = profileName.textContent\n    profileJobInput.value = profileJob.textContent\n    openModal(profileEditModal)\n    clearValidation(profileEditForm, validationConfig)\n\n    profileNameInput.focus()\n})\n\n// Карточка\nprofileAddBtn.addEventListener('click', () => {\n    newCardNameInput.value = ''\n    newCardLinkInput.value = ''\n    openModal(addNewCardModal)\n    clearValidation(addNewCardForm, validationConfig)\n\n    newCardNameInput.focus()\n})\n\n// Аватар\nprofileImage.addEventListener('click', () => {\n    profileEditAvatarInput.value = ''\n    openModal(profileEditAvatarModal)\n    clearValidation(profileEditAvatarForm, validationConfig)\n\n    profileEditAvatarInput.focus()\n})\n\n// \"Сохранить\" Профиль\nprofileEditForm.addEventListener('submit', handleProfileFormSubmit)\n\n// \"Сохранить\" Карточка\naddNewCardForm.addEventListener('submit', handleNewCardFormSubmit)\n\n// \"Сохранить\" Аватар\nprofileEditAvatarForm.addEventListener('submit', handleAvatarFormSubmit)\n\n// \"Да\" Удаление\nconfirmDeleteForm.addEventListener('submit', handleConfirmDeleteFormSubmit)\n\n\n//-----------------------------------------------\n// Записываю оригинальный текст кнопок\nallPopupButtons.forEach(btn => {\n    btn.dataset.originalText = btn.textContent\n})\n\n// Плавное открытие/закрытие всех модальных окон\nmodals.forEach(modal => {\n    modal.classList.add('popup_is-animated')\n})\n\n\n//------------------- ИНИЦИАЛИЗАЦИЯ -------------------\n// Вызовы функций\ninitalizePage(getInitialCards, getCurrentUserData)\nenableValidation(validationConfig)"],"names":["config","baseUrl","headers","authorization","responseProcessing","res","ok","json","Promise","reject","concat","status","switchLike","cardId","likeStatus","variableMethod","fetch","method","then","createCard","cardData","openImgModal","openConfirmDeleteModal","currentUserId","card","document","querySelector","content","cloneNode","cardImage","cardTitle","cardDeleteButton","cardLikeButton","cardLikesCounterElement","isLikedByCurrentUser","likes","some","_id","src","link","alt","name","textContent","length","addEventListener","isCardLiked","classList","contains","updatedCard","toggle","add","remove","catch","err","console","error","owner","openModal","modal","closeModalByOverlayClick","closeModalByKey","closeModal","removeEventListener","evt","target","currentTarget","key","toggleSubmitButton","inputs","submitButton","inactiveButtonClass","Array","from","input","validity","valid","disabled","clearValidation","form","querySelectorAll","inputSelector","submitButtonSelector","forEach","errorItem","id","setCustomValidity","deleteError","inputErrorClass","errorClass","loaders","profileName","profileJob","profileImage","cardContainer","modals","profileEditModal","addNewCardModal","profileEditAvatarModal","cardImagePopup","popupImage","popupCaption","confirmDeleteModal","closeModalButtons","allPopupButtons","profileEditBtn","profileAddBtn","profileEditForm","forms","profileNameInput","profileJobInput","addNewCardForm","newCardNameInput","newCardLinkInput","profileEditAvatarForm","profileEditAvatarInput","confirmDeleteForm","validationConfig","formSelector","cardForDelete","cardElement","spinLoader","isLoading","loaderElements","domElement","loader","renderLoading","button","loadingText","dataset","originalText","focus","elements","btn","closest","value","preventDefault","newProfileData","about","submitter","body","JSON","stringify","changeProfileData","finally","newCardData","newCard","prepend","reset","newAvatar","avatar","linkType","get","startsWith","Error","changeProfileImage","profileData","style","backgroundImage","all","_ref","_ref2","cards","userData","append","customErrorMessage","errorMessage","patternMismatch","validationMessage","showError","isInputValid","enableValidation"],"sourceRoot":""}