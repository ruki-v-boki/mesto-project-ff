{"version":3,"file":"main.js","mappings":"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","sources":["webpack://mesto-project-ff/./src/components/api.js","webpack://mesto-project-ff/./src/components/card.js","webpack://mesto-project-ff/./src/components/modal.js","webpack://mesto-project-ff/./src/components/validation.js","webpack://mesto-project-ff/./src/components/index.js"],"sourcesContent":["export { config, getInitialCards, responseProcessing, getCurrentUserData, changeProfileData, changeProfileImage}\n\n//------------------- CONFIG -------------------\nconst config = {\n    baseUrl: 'https://nomoreparties.co/v1/wff-cohort-35',\n    headers: {\n        authorization: '7263799d-0cc7-4c40-bf32-62633bf1c840',\n        'Content-Type': 'application/json'\n    }\n}\n\nconst responseProcessing = res => \n    res.ok ? res.json() : Promise.reject(`Что-то пошло не так: ${res.status}`)\n\n\n//------------------- GET -------------------\n// Профиль\nconst getCurrentUserData = () => {\n    return fetch(`${config.baseUrl}/users/me`, {\n        headers: config.headers\n    })\n    .then(responseProcessing)\n}\n\n// Карточки\nconst getInitialCards = () => {\n    return fetch(`${config.baseUrl}/cards`, {\n        headers: config.headers\n    })\n    .then(responseProcessing)\n}\n\n\n//------------------- PATCH -------------------\n// Профиль\nconst changeProfileData = (name, about) => {\n    return fetch(`${config.baseUrl}/users/me`, {\n        method: 'PATCH',\n        headers: config.headers,\n        body: JSON.stringify({\n            name,\n            about,\n        }),\n    })\n    .then(responseProcessing)\n}\n\n// Аватар\nconst changeProfileImage = avatar => {\n    return fetch(`${config.baseUrl}/users/me/avatar`, {\n        method: 'PATCH',\n        headers: config.headers,\n        body: JSON.stringify({\n            avatar,\n        }),\n    })\n    .then(responseProcessing)\n}\n","export { createCard, deleteCard, switchTheLikeBtn }\n\n// Функция создания карточки\nfunction createCard(cardData, deleteCard, switchTheLikeBtn, openImgModal, currentUserId, cardAuthorId) {\n    const cardTemplate = document.querySelector('#card-template').content\n    const card = cardTemplate.querySelector('.card').cloneNode(true)\n    const cardImage = card.querySelector('.card__image')\n    const cardTitle = card.querySelector('.card__title')\n\n    const cardDeleteButton = card.querySelector('.card__delete-button')\n    const cardLikeButton = card.querySelector('.card__like-button')\n    const cardLikesCounterElement = card.querySelector('.card__likes-counter')\n\n    const cardId = cardData._id\n    const cardImageName = cardData.name\n    const cardImageLink = cardData.link\n    const cardLikesValue = cardData.likes.length\n    const isLikedByCurrentUser = cardData.likes.some(card => card._id === currentUserId)\n\n    cardImage.src = cardImageLink\n    cardImage.alt = cardImageName\n    cardTitle.textContent = cardImageName\n    cardLikesCounterElement.textContent = cardLikesValue\n\n    cardDeleteButton.addEventListener('click', (evt) => {\n        const cardElement = evt.target.closest('.card')\n        deleteCard(cardElement, cardId)\n    })\n\n    cardLikeButton.addEventListener('click', () => {\n        switchTheLikeBtn(cardId, cardLikeButton, cardLikesCounterElement)\n    })\n\n    cardImage.addEventListener('click', () => openImgModal(cardImageName, cardImageLink))\n\n    if (currentUserId !== cardAuthorId) {\n        cardDeleteButton.style.display = 'none'\n    }\n\n    if (isLikedByCurrentUser) {\n        cardLikeButton.classList.add('card__like-button_is-active')\n    }\n\n    function isEnableLike(cardLikesValue) {\n        if (cardLikesValue === 0) {\n            cardLikesCounterElement.style.display = 'none'\n        } else {\n            cardLikesCounterElement.style.display = 'block'\n        }\n    }\n\n    isEnableLike(cardLikesValue)\n\n    return card\n}\n\n// Функции-обработчик события удаления карточки\nconst deleteCard = (cardElement, cardId) => {\n    fetch(`https://nomoreparties.co/v1/wff-cohort-35/cards/${cardId}`, {\n        method: 'DELETE',\n        headers: {\n        authorization: '7263799d-0cc7-4c40-bf32-62633bf1c840',\n        'Content-Type': 'application/json',\n        }\n    })\n    .then(res => {\n        if (res.ok) {\n            cardElement.remove()\n            console.log('Карточка удалена')\n        } else {\n            return Promise.reject(`Упс, ошибочка вышла: ${res.status}`)\n        }\n    })\n    .catch(err => console.error(`Упс, ошибочка вышла: ${err}`))\n}\n\n\n// Функции-обработчик события переключения лайка карточки\nconst switchTheLikeBtn = (cardId, likeBtn, likeCounter) => {\n    const isLiked = likeBtn.classList.contains('card__like-button_is-active')\n    const variableMethod = isLiked ? 'DELETE' : 'PUT'\n\n    fetch(`https://nomoreparties.co/v1/wff-cohort-35/cards/likes/${cardId}`, {\n        method: variableMethod,\n        headers: {\n            authorization: '7263799d-0cc7-4c40-bf32-62633bf1c840',\n            'Content-Type': 'application/json',\n        }\n    })\n    .then(res => {\n        if (res.ok) {\n            return res.json()\n        } else {\n            return Promise.reject(`Упс, ошибочка вышла: ${res.status}`)\n        }\n    })\n    .then(updatedCard => {\n        likeBtn.classList.toggle('card__like-button_is-active')\n        likeCounter.textContent = updatedCard.likes.length\n        if (likeCounter.textContent < 1) {\n            likeCounter.style.display = 'none'\n        } else {\n            likeCounter.style.display = 'block'\n        }\n    })\n    .catch(err => console.error(`Упс, ошибочка вышла: ${err}`))\n}","export { openModal, closeModal }\n\n// Функция открытия модального окна\nconst openModal = modal => {\n    modal.classList.add('popup_is-opened')\n    modal.addEventListener('click', closeModalByOverlayClick)\n    document.addEventListener('keydown', closeModalByKey)\n}\n\n// Функция закрытия модального окна\nconst closeModal = modal => {\n    modal.classList.remove('popup_is-opened')\n    modal.removeEventListener('click', closeModalByOverlayClick)\n    document.removeEventListener('keydown', closeModalByKey)\n}\n\n// Функция-обработчик события клика по оверлею\nfunction closeModalByOverlayClick(evt) {\n    if (evt.target === evt.currentTarget) {\n        closeModal(evt.currentTarget)\n    }\n}\n\n// Функция-обработчик события нажатия кнопки \"Esc\"\nfunction closeModalByKey(evt) {\n    if (evt.key === 'Escape') {\n        const modal = document.querySelector('.popup_is-opened')\n        modal ? closeModal(modal) : false\n    }\n}\n","export { enableValidation, clearValidation }\n\n// Валидация всех форм\nfunction enableValidation(config) {\n    const forms = document.querySelectorAll(config.formSelector)\n\n    forms.forEach((form) => {\n        const inputs = form.querySelectorAll(config.inputSelector)\n        const submitButton = form.querySelector(config.submitButtonSelector)\n\n        inputs.forEach((input) => {\n        input.addEventListener('input', () => {\n            isInputValid(form, input, config.inputErrorClass, config.errorClass)\n            toggleSubmitButton(inputs, submitButton, config.inactiveButtonClass)\n        })\n        })\n\n        toggleSubmitButton(inputs, submitButton, config.inactiveButtonClass)\n    })\n}\n\n// Проверка валидности полей формы\nfunction isInputValid(form, input, inputErrorClass, errorClass) {\n    const errorItem = form.querySelector(`.${input.id}-error`)\n    const customErrorMessage = input.dataset.errorMessage\n\n    if (input.validity.patternMismatch) {\n        input.setCustomValidity(customErrorMessage)\n    } else {\n        input.setCustomValidity('')\n    }\n\n    if (!input.validity.valid) {\n        input.classList.add(inputErrorClass)\n        errorItem.classList.add(errorClass)\n        errorItem.textContent = input.validationMessage\n    } else {\n        input.classList.remove(inputErrorClass)\n        errorItem.classList.remove(errorClass)\n        errorItem.textContent = ''\n  }\n}\n\n// Переключение состояния кнопки при валидации\nfunction toggleSubmitButton(inputs, submitButton, inactiveButtonClass) {\n    const hasInvalidInput = Array.from(inputs).some((input) => !input.validity.valid)\n\n    if (hasInvalidInput) {\n        submitButton.classList.add(inactiveButtonClass)\n        submitButton.disabled = true\n    } else {\n        submitButton.classList.remove(inactiveButtonClass)\n        submitButton.disabled = false\n    }\n}\n\n// Очистка сообщений об ошибках\nfunction clearValidation(form, config) {\n    const inputs = form.querySelectorAll(config.inputSelector)\n    const submitButton = form.querySelector(config.submitButtonSelector)\n\n    inputs.forEach((input) => {\n        const errorItem = form.querySelector(`.${input.id}-error`)\n\n        input.setCustomValidity('')\n        input.classList.remove(config.inputErrorClass)\n\n        if (errorItem) {\n            errorItem.textContent = ''\n            errorItem.classList.remove(config.errorClass)\n        }\n    })\n\n    submitButton.classList.add(config.inactiveButtonClass);\n    submitButton.disabled = true;\n}","import '../pages/index.css'\nimport { config, getInitialCards, responseProcessing, getCurrentUserData, changeProfileData, changeProfileImage  } from './api.js'\nimport { createCard, deleteCard, switchTheLikeBtn } from './card.js'\nimport { openModal, closeModal } from './modal.js'\nimport { enableValidation, clearValidation } from './validation.js'\n\n\n//-------------- ПРОФИЛЬ --------------\nconst profileName = document.querySelector('.profile__title')\nconst profileJob = document.querySelector('.profile__description')\nconst profileImage = document.querySelector('.profile__image')\n\n// Контейнер карточек\nconst placesList = document.querySelector('.places__list')\n\n\n\n\n\n\n\n\n//-------------- МОДАЛЬНЫЕ ОКНА --------------\n// Все модальные окна\nconst modals = document.querySelectorAll('.popup')\n\n// Профиль\nconst profileEditModal = document.querySelector('.popup_type_edit')\nconst addNewCardModal = document.querySelector('.popup_type_new-card')\n\n// Аватар\nconst profileEditAvatarModal = document.querySelector('.popup_type_new-avatar')\n\n// Карточка\nconst cardImagePopup = document.querySelector('.popup_type_image')\nconst popupImage = cardImagePopup.querySelector('.popup__image')\nconst popupCaption = cardImagePopup.querySelector('.popup__caption')\n\n\n\n\n\n\n\n//-------------- КНОПКИ --------------\n// Все кнопки закрытия модальных окон\nconst closeModalButtons = document.querySelectorAll('.popup__close')\n\n// Профиль\nconst profileEditBtn = document.querySelector('.profile__edit-button')\nconst profileAddBtn = document.querySelector('.profile__add-button')\n\n\n\n\n\n\n\n\n\n\n//------------------- ФОРМЫ -------------------\n// Профиль\nconst profileEditForm = document.forms['edit-profile']\nconst profileNameInput = profileEditForm.querySelector('.popup__input_type_name')\nconst profileJobInput = profileEditForm.querySelector('.popup__input_type_description')\n\n// Карточка\nconst addNewCardForm = document.forms['new-place']\nconst newCardNameInput = addNewCardForm.querySelector('.popup__input_type_card-name')\nconst newCardLinkInput = addNewCardForm.querySelector('.popup__input_type_url')\n\n// Аватар\nconst profileEditAvatarForm = document.forms['new-avatar']\nconst profileEditAvatarInput = profileEditAvatarForm.querySelector('.popup__input_type_url')\n\n// Объект настроек валидации\nconst validationConfig = {\n    formSelector: '.popup__form',\n    inputSelector: '.popup__input',\n    submitButtonSelector: '.popup__button',\n    inactiveButtonClass: 'popup__button_disabled',\n    inputErrorClass: 'popup__input_type_error',\n    errorClass: 'popup__error_visible',\n}\n\n\n\n\n\n\n\n\n\n\n//------------------- ФУНКЦИИ -------------------\n// Профиль\nfunction updateProfile() {\n    getCurrentUserData()\n    .then((profileData) => {\n      profileName.textContent = profileData.name\n      profileJob.textContent = profileData.about\n      profileImage.style.backgroundImage = `url(${profileData.avatar})`\n    })\n    .catch(err => console.error(`Упс, ошибочка вышла: ${err}`))\n}\n\n// Отправка формы редактирования профиля\nfunction handleProfileFormSubmit(evt) {\n    evt.preventDefault()\n\n    changeProfileData(profileNameInput.value, profileJobInput.value)\n    .then(profileData => {\n        profileName.textContent = profileData.name\n        profileJob.textContent = profileData.about\n        closeModal(profileEditModal)\n    })\n    .catch(err => console.error(`Упс, ошибочка обновления профиля: ${err}`))\n}\n\n// Отправка формы изменения аватара\nfunction handleAvatarFormSubmit(evt) {\n    evt.preventDefault()\n\n    changeProfileImage(profileEditAvatarInput.value)\n    .then((profileData) => {\n        profileImage.style.backgroundImage = `url(${profileData.avatar})`\n        closeModal(profileEditAvatarModal)\n    })\n    .catch(err => console.error(`Упс, ошибочка загрузки аватара: ${err}`))\n}\n\n// Отправка формы создания новой карточки\nfunction handleNewCardFormSubmit(evt) {\n    evt.preventDefault()\n    const newCard = {\n        name: newCardNameInput.value,\n        link: newCardLinkInput.value,\n    }\n    fetch(`${config.baseUrl}/cards`, {\n        method: 'POST',\n        headers: config.headers,\n        body: JSON.stringify(newCard)\n    })\n    .then(responseProcessing)\n    .then(newCardData => {\n        placesList.prepend(createCard(newCardData, deleteCard, switchTheLikeBtn, openImgModal))\n        addNewCardForm.reset()\n        closeModal(addNewCardModal)\n    })\n    .catch(err => console.error(`Упс, ошибочка вышла: ${err}`))\n}\n\n// Открытие попапа картинки карточки\nfunction openImgModal(name, link) {\n    openModal(cardImagePopup)\n    popupImage.alt = name\n    popupCaption.textContent = name\n    popupImage.src = link\n}\n\n\n\n\n\n\n\n\n\n//------------------- КНОПКИ -------------------\n// Все кнопки закрытия модальных окон\ncloseModalButtons.forEach((btn) => {\n    const modal = btn.closest('.popup')\n    btn.addEventListener('click', () => closeModal(modal))\n})\n\n// Профиль\nprofileEditBtn.addEventListener('click', () => {\n    profileNameInput.value = profileName.textContent\n    profileJobInput.value = profileJob.textContent\n    openModal(profileEditModal)\n    clearValidation(profileEditForm, validationConfig)\n})\n\n// Карточка\nprofileAddBtn.addEventListener('click', () => {\n    newCardNameInput.value = ''\n    newCardLinkInput.value = ''\n    openModal(addNewCardModal)\n    clearValidation(addNewCardForm, validationConfig)\n})\n\n// Аватар\nprofileImage.addEventListener('click', () => {\n    profileEditAvatarInput.value = ''\n    openModal(profileEditAvatarModal)\n    clearValidation(profileEditAvatarForm, validationConfig)\n})\n\n// Кнопка \"Сохранить\" Профиль\nprofileEditForm.addEventListener('submit', handleProfileFormSubmit)\n\n// Кнопка \"Сохранить\" Карточка\naddNewCardForm.addEventListener('submit', handleNewCardFormSubmit)\n\n// Кнопка \"Сохранить\" Аватар\nprofileEditAvatarForm.addEventListener('submit', handleAvatarFormSubmit)\n\n\n\n\n\n\n\n\n\n\n\n\n//-----------------------------------------------\n\n// Плавное открытие/закрытие всех модальных окон\nmodals.forEach((modal) => modal.classList.add('popup_is-animated'))\n\n// Вызовы функций\nupdateProfile()\n// renderCards(getInitialCards, getUserData, placesList, createCard)\nenableValidation(validationConfig)\n\n\n\nPromise.all([getInitialCards(), getCurrentUserData()])\n    .then(([cards, userData]) => {\n        cards.forEach(cardData => {\n            const currentUserId = userData._id\n            const cardAuthorId = cardData.owner._id\n            placesList.append(createCard(cardData, \n                                            deleteCard, \n                                            switchTheLikeBtn, \n                                            openImgModal, \n                                            currentUserId, \n                                            cardAuthorId\n            ))\n        })\n    })\n    .catch(err => console.error(`Упс, ошибочка вышла: ${err}`))\n\n\n\n    // Отрисовка карточек с сервера\n// function renderCards(getCards, getUserInfo, cardContainer, createCard) {\n    // Promise.all([getCards(), getUserInfo()])\n    //     .then(([cards, userInfo]) => {\n    //         cards.forEach(cardData => {\n    //             const currentUserId = userInfo._id\n    //             const cardAuthorId = cardData.owner._id\n    //             cardContainer.append(createCard(cardData, \n    //                                             deleteCard, \n    //                                             switchTheLikeBtn, \n    //                                             openImgModal, \n    //                                             currentUserId, \n    //                                             cardAuthorId\n    //             ))\n    //         })\n    //     })\n    //     .catch(err => console.error(`Упс, ошибочка вышла: ${err}`))\n// }"],"names":["config","baseUrl","headers","authorization","responseProcessing","res","ok","json","Promise","reject","concat","status","getCurrentUserData","fetch","then","createCard","cardData","deleteCard","switchTheLikeBtn","openImgModal","currentUserId","cardAuthorId","card","document","querySelector","content","cloneNode","cardImage","cardTitle","cardDeleteButton","cardLikeButton","cardLikesCounterElement","cardId","_id","cardImageName","name","cardImageLink","link","cardLikesValue","likes","length","isLikedByCurrentUser","some","src","alt","textContent","addEventListener","evt","cardElement","target","closest","style","display","classList","add","isEnableLike","method","remove","console","log","catch","err","error","likeBtn","likeCounter","variableMethod","contains","updatedCard","toggle","openModal","modal","closeModalByOverlayClick","closeModalByKey","closeModal","removeEventListener","currentTarget","key","toggleSubmitButton","inputs","submitButton","inactiveButtonClass","Array","from","input","validity","valid","disabled","clearValidation","form","querySelectorAll","inputSelector","submitButtonSelector","forEach","errorItem","id","setCustomValidity","inputErrorClass","errorClass","profileName","profileJob","profileImage","placesList","modals","profileEditModal","addNewCardModal","profileEditAvatarModal","cardImagePopup","popupImage","popupCaption","closeModalButtons","profileEditBtn","profileAddBtn","profileEditForm","forms","profileNameInput","profileJobInput","addNewCardForm","newCardNameInput","newCardLinkInput","profileEditAvatarForm","profileEditAvatarInput","validationConfig","formSelector","btn","value","about","preventDefault","body","JSON","stringify","profileData","newCard","newCardData","prepend","reset","avatar","backgroundImage","customErrorMessage","dataset","errorMessage","patternMismatch","validationMessage","isInputValid","enableValidation","all","_ref","_ref2","cards","userData","owner","append"],"sourceRoot":""}