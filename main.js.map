{"version":3,"file":"main.js","mappings":"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","sources":["webpack://mesto-project-ff/./src/components/api.js","webpack://mesto-project-ff/./src/components/card.js","webpack://mesto-project-ff/./src/components/modal.js","webpack://mesto-project-ff/./src/components/validation.js","webpack://mesto-project-ff/./src/components/index.js"],"sourcesContent":["export { getCurrentUserData, getInitialCards, changeProfileData, changeProfileImage, postNewCard, deleteCard, switchLike }\n\n//------------------- CONFIG -------------------\nconst config = {\n    baseUrl: 'https://nomoreparties.co/v1/wff-cohort-35',\n    headers: {\n        authorization: '7263799d-0cc7-4c40-bf32-62633bf1c840',\n        'Content-Type': 'application/json',\n    }\n}\n\nconst responseProcessing = res => \n    res.ok ? res.json() : Promise.reject(`Что-то пошло не так: ${res.status}`)\n\n\n//------------------- GET -------------------\n// Профиль\nconst getCurrentUserData = () => {\n    return fetch(`${config.baseUrl}/users/me`, {\n        headers: config.headers\n    })\n    .then(responseProcessing)\n}\n\n// Карточки\nconst getInitialCards = () => {\n    return fetch(`${config.baseUrl}/cards`, {\n        headers: config.headers\n    })\n    .then(responseProcessing)\n}\n\n\n//------------------- PATCH -------------------\n// Профиль\nconst changeProfileData = newProfileData => {\n    return fetch(`${config.baseUrl}/users/me`, {\n        method: 'PATCH',\n        headers: config.headers,\n        body: JSON.stringify(newProfileData),\n    })\n    .then(responseProcessing)\n}\n\n// Аватар\nconst changeProfileImage = newAvatar => {\n    return fetch(`${config.baseUrl}/users/me/avatar`, {\n        method: 'PATCH',\n        headers: config.headers,\n        body: JSON.stringify(newAvatar),\n    })\n    .then(responseProcessing)\n}\n\n\n//------------------- POST -------------------\n// Карточка\nconst postNewCard = newCardData => {\n    return fetch(`${config.baseUrl}/cards`, {\n        method: 'POST',\n        headers: config.headers,\n        body: JSON.stringify(newCardData)\n    })\n    .then(responseProcessing)\n}\n\n\n//------------------- DELETE -------------------\n// Карточка\nconst deleteCard = cardId => {\n    return fetch(`${config.baseUrl}/cards/${cardId}`, {\n        method: 'DELETE',\n        headers: config.headers,\n    })\n    .then(responseProcessing)\n}\n\n// Лайк Карточки\nconst switchLike = (cardId, likeStatus) => {\n    const variableMethod = likeStatus ? 'DELETE' : 'PUT'\n\n    return fetch(`${config.baseUrl}/cards/likes/${cardId}`, {\n        method: variableMethod,\n        headers: config.headers,\n    })\n    .then(responseProcessing)\n}\n\n\n","export { createCard, deleteCardElement }\n\n// Функция создания карточки\nfunction createCard(cardData, switchLike, openImgModal, openConfirmDeleteModal, currentUserId) {\n    const cardTemplate = document.querySelector('#card-template').content\n    const card = cardTemplate.querySelector('.card').cloneNode(true)\n    const cardImage = card.querySelector('.card__image')\n    const cardTitle = card.querySelector('.card__title')\n\n    const cardDeleteButton = card.querySelector('.card__delete-button')\n    const cardLikeButton = card.querySelector('.card__like-button')\n\n    const cardLikesCounterElement = card.querySelector('.card__likes-counter')\n    const isLikedByCurrentUser = cardData.likes.some(card => card._id === currentUserId)\n\n    cardImage.src = cardData.link\n    cardImage.alt = cardData.name\n    cardTitle.textContent = cardData.name\n    cardLikesCounterElement.textContent = cardData.likes.length\n\n\n//------------------- СЛУШАТЕЛИ -------------------\n    cardLikeButton.addEventListener('click', () => {\n        const isCardLiked = cardLikeButton.classList.contains('card__like-button_is-active')\n\n        switchLike(cardData._id, isCardLiked)\n        .then(updatedCard => {\n            cardLikeButton.classList.toggle('card__like-button_is-active')\n            cardLikesCounterElement.textContent = updatedCard.likes.length\n\n            if (cardLikesCounterElement.textContent < 1) {\n                cardLikesCounterElement.classList.add('display-disabled')\n            } else {\n                cardLikesCounterElement.classList.remove('display-disabled')\n            }\n        })\n        .catch(err => console.error(`Упс, лайнуть не удалось: ${err}`))\n    })\n\n    cardImage.addEventListener('click', (evt) => {\n        openImgModal(cardData.name, cardData.link)\n    })\n\n    cardDeleteButton.addEventListener('click', () => {\n        openConfirmDeleteModal(cardData._id, card)\n    })\n\n\n//------------------- УСЛОВИЯ -------------------\n    if (currentUserId !== cardData.owner._id) {\n        cardDeleteButton.classList.add('display-disabled')\n    }\n\n    if (isLikedByCurrentUser) {\n        cardLikeButton.classList.add('card__like-button_is-active')\n    }\n\n    if (cardData.likes.length === 0) {\n        cardLikesCounterElement.classList.add('display-disabled')\n\n    } else {\n        cardLikesCounterElement.classList.remove('display-disabled')\n    }\n\n\n    return card\n}\n\n// Функция удаления карточки\nfunction deleteCardElement(cardElement) {\n    cardElement.remove()\n}","export { openModal, closeModal }\n\n// Функция открытия модального окна\nconst openModal = (modal) => {\n    modal.classList.add('popup_is-opened')\n    modal.addEventListener('mousedown', closeModalByOverlayClick)\n    document.addEventListener('keydown', closeModalByKey)\n}\n\n// Функция закрытия модального окна\nconst closeModal = modal => {\n    modal.classList.remove('popup_is-opened')\n    modal.removeEventListener('mousedown', closeModalByOverlayClick)\n    document.removeEventListener('keydown', closeModalByKey)\n}\n\n// Функция-обработчик события клика по оверлею\nfunction closeModalByOverlayClick(evt) {\n    if (evt.target === evt.currentTarget) {\n        closeModal(evt.currentTarget)\n    }\n}\n\n// Функция-обработчик события нажатия кнопки \"Esc\"\nfunction closeModalByKey(evt) {\n    if (evt.key === 'Escape') {\n        const modal = document.querySelector('.popup_is-opened')\n        modal ? closeModal(modal) : false\n    }\n}","export { enableValidation, clearValidation }\n\n// Валидация всех форм\nfunction enableValidation(config) {\n    const forms = document.querySelectorAll(config.formSelector)\n\n    forms.forEach(form => {\n        const inputs = form.querySelectorAll(config.inputSelector)\n        const submitButton = form.querySelector(config.submitButtonSelector)\n\n        inputs.forEach(input => {\n            input.addEventListener('input', () => {\n                isInputValid(form, input, config.inputErrorClass, config.errorClass)\n                toggleSubmitButton(inputs, submitButton, config.inactiveButtonClass)\n            })\n        })\n\n        toggleSubmitButton(inputs, submitButton, config.inactiveButtonClass)\n    })\n}\n\n// Проверка валидности полей формы\nfunction isInputValid(form, input, inputErrorClass, errorClass) {\n    const errorItem = form.querySelector(`.${input.id}-error`)\n    const customErrorMessage = input.dataset.errorMessage\n\n    if (input.validity.patternMismatch) {\n        input.setCustomValidity(customErrorMessage)\n    } else {\n        input.setCustomValidity('')\n    }\n\n    if (!input.validity.valid) {\n        showError(input, errorItem, inputErrorClass, errorClass)\n    } else {\n        deleteError(input, errorItem, inputErrorClass, errorClass)\n    }\n}\n\n// Переключение состояния кнопки при валидации\nfunction toggleSubmitButton(inputs, submitButton, inactiveButtonClass) {\n    const hasInvalidInput = Array.from(inputs).some(input => !input.validity.valid)\n\n    if (hasInvalidInput) {\n        submitButton.classList.add(inactiveButtonClass)\n        submitButton.disabled = true\n    } else {\n        submitButton.classList.remove(inactiveButtonClass)\n        submitButton.disabled = false\n    }\n}\n\n// Очистка сообщений об ошибках\nfunction clearValidation(form, config) {\n    const inputs = form.querySelectorAll(config.inputSelector)\n\n    inputs.forEach(input => {\n        const errorItem = form.querySelector(`.${input.id}-error`)\n\n        input.setCustomValidity('')\n        deleteError(input, errorItem, config.inputErrorClass, config.errorClass)\n    })\n}\n\n// Показать ошибку\nfunction showError(input, errorItem, inputErrorClass, errorClass) {\n    input.classList.add(inputErrorClass)\n    errorItem.classList.add(errorClass)\n    errorItem.textContent = input.validationMessage\n}\n\n// Удалить сообщение об ошибке\nfunction deleteError(input, errorItem, inputErrorClass, errorClass) {\n    input.classList.remove(inputErrorClass)\n    errorItem.classList.remove(errorClass)\n    errorItem.textContent = ''\n}\n","import '../pages/index.css'\nimport { getCurrentUserData, getInitialCards, changeProfileData, changeProfileImage, postNewCard, deleteCard, switchLike } from './api.js'\nimport { createCard, deleteCardElement } from './card.js'\nimport { openModal, closeModal } from './modal.js'\nimport { enableValidation, clearValidation } from './validation.js'\n\n\n//------------------- ПРОФИЛЬ -------------------\nconst profileName = document.querySelector('.profile__title')\nconst profileJob = document.querySelector('.profile__description')\nconst profileImage = document.querySelector('.profile__image')\n\n// Контейнер карточек\nconst cardContainer = document.querySelector('.places__list')\n\n\n//------------------- МОДАЛЬНЫЕ ОКНА -------------------\n// Все модальные окна\nconst modals = document.querySelectorAll('.popup')\n\n// Профиль\nconst profileEditModal = document.querySelector('.popup_type_edit')\nconst addNewCardModal = document.querySelector('.popup_type_new-card')\n\n// Аватар\nconst profileEditAvatarModal = document.querySelector('.popup_type_new-avatar')\n\n// Карточка\nconst cardImagePopup = document.querySelector('.popup_type_image')\nconst popupImage = cardImagePopup.querySelector('.popup__image')\nconst popupCaption = cardImagePopup.querySelector('.popup__caption')\n\n// Удаление\nconst confirmDeleteModal = document.querySelector('.popup_type_delete-card')\n\n\n//------------------- КНОПКИ ------------------\n// Все кнопки закрытия модальных окон\nconst closeModalButtons = document.querySelectorAll('.popup__close')\n\n// Все кнопки модальных окон\nconst allPopupButtons = document.querySelectorAll('.popup__button')\n\n// Профиль\nconst profileEditBtn = document.querySelector('.profile__edit-button')\nconst profileAddBtn = document.querySelector('.profile__add-button')\n\n\n//------------------- ФОРМЫ -------------------\n// Профиль\nconst profileEditForm = document.forms['edit-profile']\nconst profileNameInput = profileEditForm.querySelector('.popup__input_type_name')\nconst profileJobInput = profileEditForm.querySelector('.popup__input_type_description')\n\n// Карточка\nconst addNewCardForm = document.forms['new-place']\nconst newCardNameInput = addNewCardForm.querySelector('.popup__input_type_card-name')\nconst newCardLinkInput = addNewCardForm.querySelector('.popup__input_type_url')\n\n// Аватар\nconst profileEditAvatarForm = document.forms['new-avatar']\nconst profileEditAvatarInput = profileEditAvatarForm.querySelector('.popup__input_type_url')\n\n// Удаление\nconst confirmDeleteForm = document.forms['confirm-delete']\n\n// Объект настроек валидации\nconst validationConfig = {\n    formSelector: '.popup__form',\n    inputSelector: '.popup__input',\n    submitButtonSelector: '.popup__button',\n    inactiveButtonClass: 'popup__button_disabled',\n    inputErrorClass: 'popup__input_type_error',\n    errorClass: 'popup__error_visible',\n}\n\n// Карточка для удаления\nconst cardForDelete = {\n    cardId: '',\n    cardElement: null,\n}\n\n\n//------------------- ФУНКЦИИ -------------------\n// Лоадер\nfunction renderLoading(isLoading, button, loadingText) {\n    if (isLoading) {\n        button.classList.add('popup__button_loading')\n        button.textContent = loadingText\n    } else {\n        button.classList.remove('popup__button_loading')\n        button.textContent = button.dataset.originalText\n    }\n}\n\n// Профиль\nfunction updateProfile(profileData) {\n    profileName.textContent = profileData.name\n    profileJob.textContent = profileData.about\n    profileImage.style.backgroundImage = `url(${profileData.avatar})`\n}\n\n// Отправка формы Профиля\nfunction handleProfileFormSubmit(evt) {\n    evt.preventDefault()\n    const newProfileData = {\n        name: profileNameInput.value,\n        about: profileJobInput.value,\n    }\n    renderLoading(true, evt.submitter, 'Сохранение')\n\n    changeProfileData(newProfileData)\n    .then(newProfileData => {\n        profileName.textContent = newProfileData.name\n        profileJob.textContent = newProfileData.about\n        closeModal(profileEditModal)\n    })\n    .catch(err => console.error(`Упс, ошибочка обновления профиля: ${err}`))\n    .finally(() => renderLoading(false, evt.submitter))\n}\n\n// Отправка формы Аватара\nfunction handleAvatarFormSubmit(evt) {\n    evt.preventDefault()\n    const newAvatar = {avatar: profileEditAvatarInput.value}\n    renderLoading(true, evt.submitter, 'Сохранение')\n\n    changeProfileImage(newAvatar)\n    .then((profileData) => {\n        profileImage.style.backgroundImage = `url(${profileData.avatar})`\n        closeModal(profileEditAvatarModal)\n    })\n    .catch(err => console.error(`Упс, ошибочка загрузки аватара: ${err}`))\n    .finally(() => renderLoading(false, evt.submitter))\n}\n\n// Отправка формы создания новой Карточки\nfunction handleNewCardFormSubmit(evt) {\n    evt.preventDefault()\n    const newCard = {\n        name: newCardNameInput.value,\n        link: newCardLinkInput.value,\n    }\n    renderLoading(true, evt.submitter, 'Сохранение')\n\n    postNewCard(newCard)\n    .then(newCardData => {\n        cardContainer.prepend(createCard(newCardData,\n                                        switchLike,\n                                        openImgModal,\n                                        openConfirmDeleteModal,\n                                        newCardData.owner._id\n        ))\n        addNewCardForm.reset()\n        closeModal(addNewCardModal)\n    })\n    .catch(err => console.error(`Упс, ошибочка вышла: ${err}`))\n    .finally(() => renderLoading(false, evt.submitter))\n}\n\n// Открытие попапа картинки Карточки\nfunction openImgModal(name, link) {\n    openModal(cardImagePopup)\n    popupImage.alt = name\n    popupCaption.textContent = name\n    popupImage.src = link\n\n    cardImagePopup.querySelector('.popup__close').focus()\n}\n\n// Открытие попапа Удаления\nfunction openConfirmDeleteModal(cardId, cardElement) {\n    cardForDelete.cardId = cardId\n    cardForDelete.cardElement = cardElement\n\n    openModal(confirmDeleteModal)\n\n    confirmDeleteForm.elements['delete-button'].focus()\n}\n\n\n//------------------- СЛУШАТЕЛИ -------------------\n// Все кнопки закрытия модальных окон\ncloseModalButtons.forEach((btn) => {\n    const modal = btn.closest('.popup')\n    btn.addEventListener('click', () => closeModal(modal))\n})\n\n// Профиль\nprofileEditBtn.addEventListener('click', () => {\n    profileNameInput.value = profileName.textContent\n    profileJobInput.value = profileJob.textContent\n    openModal(profileEditModal)\n    clearValidation(profileEditForm, validationConfig)\n\n    profileNameInput.focus()\n})\n\n// Карточка\nprofileAddBtn.addEventListener('click', () => {\n    newCardNameInput.value = ''\n    newCardLinkInput.value = ''\n    openModal(addNewCardModal)\n    clearValidation(addNewCardForm, validationConfig)\n\n    newCardNameInput.focus()\n})\n\n// Аватар\nprofileImage.addEventListener('click', () => {\n    profileEditAvatarInput.value = ''\n    openModal(profileEditAvatarModal)\n    clearValidation(profileEditAvatarForm, validationConfig)\n\n    profileEditAvatarInput.focus()\n})\n\n// \"Сохранить\" Профиль\nprofileEditForm.addEventListener('submit', handleProfileFormSubmit)\n\n// \"Сохранить\" Карточка\naddNewCardForm.addEventListener('submit', handleNewCardFormSubmit)\n\n// \"Сохранить\" Аватар\nprofileEditAvatarForm.addEventListener('submit', handleAvatarFormSubmit)\n\n// \"Да\" Удаление\nconfirmDeleteForm.addEventListener('submit', (evt) => {\n    evt.preventDefault()\n    renderLoading(true, evt.submitter, 'Удаление')\n\n    deleteCard(cardForDelete.cardId)\n    .then(() => {\n        deleteCardElement(cardForDelete.cardElement)\n        closeModal(confirmDeleteModal)\n    })\n    .catch(err => console.error(\"Ошибка удаления:\", err))\n    .finally(() => renderLoading(false, evt.submitter))\n})\n\n// Записываю оригинальный текст кнопок\nallPopupButtons.forEach(btn => {\n    btn.dataset.originalText = btn.textContent\n})\n\n// Плавное открытие/закрытие всех модальных окон\nmodals.forEach((modal) => {\n    modal.classList.add('popup_is-animated')\n})\n\n//-----------------------------------------------\n// Вызовы функций\nenableValidation(validationConfig)\n\nPromise.all([getInitialCards(), getCurrentUserData()])\n    .then(([cards, userData]) => {\n        cards.forEach(cardData => {\n            cardContainer.append(createCard(cardData,\n                                            switchLike,\n                                            openImgModal,\n                                            openConfirmDeleteModal,\n                                            userData._id\n            ))\n        })\n        updateProfile(userData)\n    })\n    .catch(err => console.error(`Упс, ошибочка вышла: ${err}`))"],"names":["config","baseUrl","headers","authorization","responseProcessing","res","ok","json","Promise","reject","concat","status","switchLike","cardId","likeStatus","variableMethod","fetch","method","then","createCard","cardData","openImgModal","openConfirmDeleteModal","currentUserId","card","document","querySelector","content","cloneNode","cardImage","cardTitle","cardDeleteButton","cardLikeButton","cardLikesCounterElement","isLikedByCurrentUser","likes","some","_id","src","link","alt","name","textContent","length","addEventListener","isCardLiked","classList","contains","updatedCard","toggle","add","remove","catch","err","console","error","evt","owner","openModal","modal","closeModalByOverlayClick","closeModalByKey","closeModal","removeEventListener","target","currentTarget","key","toggleSubmitButton","inputs","submitButton","inactiveButtonClass","Array","from","input","validity","valid","disabled","clearValidation","form","querySelectorAll","inputSelector","forEach","errorItem","id","setCustomValidity","deleteError","inputErrorClass","errorClass","profileName","profileJob","profileImage","cardContainer","modals","profileEditModal","addNewCardModal","profileEditAvatarModal","cardImagePopup","popupImage","popupCaption","confirmDeleteModal","closeModalButtons","allPopupButtons","profileEditBtn","profileAddBtn","profileEditForm","forms","profileNameInput","profileJobInput","addNewCardForm","newCardNameInput","newCardLinkInput","profileEditAvatarForm","profileEditAvatarInput","confirmDeleteForm","validationConfig","formSelector","submitButtonSelector","cardForDelete","cardElement","renderLoading","isLoading","button","loadingText","dataset","originalText","focus","elements","btn","closest","value","preventDefault","newProfileData","about","submitter","body","JSON","stringify","changeProfileData","finally","newCardData","newCard","prepend","reset","newAvatar","avatar","changeProfileImage","profileData","style","backgroundImage","customErrorMessage","errorMessage","patternMismatch","validationMessage","showError","isInputValid","enableValidation","all","_ref","_ref2","cards","userData","append"],"sourceRoot":""}